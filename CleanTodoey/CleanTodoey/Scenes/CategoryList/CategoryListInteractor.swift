//
//  CategoryListInteractor.swift
//  CleanTodoey
//
//  Created by Jo√£o Pedro Giarrante on 25/10/20.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol CategoryListBusinessLogic {
    func fetchCategories()
    func updateCategories(with request: CategoryList.UpdateCategories.Request)
}

protocol CategoryListDataStore {
    //var name: String { get set }
}

class CategoryListInteractor: CategoryListBusinessLogic, CategoryListDataStore {

    // MARK: Properties
    
    var presenter: CategoryListPresentationLogic?
    var worker: CategoryListWorker?
    
    
    // MARK: Fetch Categories
    
    func fetchCategories() {
        worker = CategoryListWorker()
        worker?.fetchCategories()
            .done(handleFetchCategories)
        
        let response = CategoryList.FetchCategories.Response()
        presenter?.presentCategories(response)
    }
    
    private func handleFetchCategories(response: CategoryList.FetchCategories.Response){
        presenter?.presentCategories(response)
    }
    
    
    // MARK: Update Categories
    
    func updateCategories(with request: CategoryList.UpdateCategories.Request) {
        worker = CategoryListWorker()
        worker?.updateCategories(with: request)
            .done(handleUpdateCategoriesSuccess)
            .catch(handleUpdateCategoriesError)
    }
    
    private func handleUpdateCategoriesSuccess(response: CategoryList.UpdateCategories.Response){
        presenter?.presentUpdateCategories(response)
    }
    
    private func handleUpdateCategoriesError(error: Error){
        let response = CategoryList.UpdateCategories.Response(error: error)
        presenter?.presentUpdateCategories(response)
    }
}
